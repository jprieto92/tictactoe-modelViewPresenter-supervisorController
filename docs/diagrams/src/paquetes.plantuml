@startuml tictactoe
class Game as "usantatecla.\ntictactoe.models.\nGame"
class View as "usantatecla.\ntictactoe.models.\nView"

class  usantatecla.tictactoe.TicTacToe{
  ~ TicTacToe()
  - play()
  + main(String[])
}
usantatecla.tictactoe.TicTacToe *-down-> Game
usantatecla.tictactoe.TicTacToe *-down-> View
@enduml

@startuml tictactoe.views
class Console as "usantatecla.utils.\nConsole"
class Coordinate as "usantatecla.\ntictactoe.models.\nCoordinate" 
class Game as "usantatecla.\ntictactoe.models.\nGame"
class LimitedIntDialog as "usantatecla.utils.\nLimitedIntDialog"
class Token as "usantatecla.\ntictactoe.models.\nToken"
class Error as "usantatecla.\ntictactoe.models.\nError"

class  usantatecla.tictactoe.views.CoordinateView{
  + read(String): Coordinate
}
Console <..-down- usantatecla.tictactoe.views.CoordinateView
Coordinate <..-down- usantatecla.tictactoe.views.CoordinateView
usantatecla.tictactoe.views.CoordinateView ..> usantatecla.tictactoe.views.ErrorView

class  usantatecla.tictactoe.views.ErrorView{
  - {static} MESSAGES: String[]
  ~ ErrorView(Error)
  ~ writeln()
}
usantatecla.tictactoe.views.ErrorView *-down-> Error
Console <..-down- usantatecla.tictactoe.views.ErrorView

class  usantatecla.tictactoe.views.BoardView{
  ~ BoardView(Game)
  ~ write()
}
usantatecla.tictactoe.views.BoardView *-down-> Game
usantatecla.tictactoe.views.BoardView .down.> usantatecla.tictactoe.views.Message
usantatecla.tictactoe.views.BoardView .down.> Coordinate
usantatecla.tictactoe.views.BoardView .down.> usantatecla.tictactoe.views.TokenView

enum  usantatecla.tictactoe.views.Message{
  + TITLE
  + NUMBER_PLAYERS
  + SEPARATOR
  + VERTICAL_LINE_LEFT
  + VERTICAL_LINE_CENTERED
  + VERTICAL_LINE_RIGHT
  + ENTER_COORDINATE_TO_PUT
  + ENTER_COORDINATE_TO_REMOVE
  + COORDINATE_TO_PUT
  + COORDINATE_TO_REMOVE
  + COORDINATE_TO_MOVE
  +	PLAYER_WIN
  + RESUME
  - message: String
  - Message(String)
  ~ write()
  ~ writeln()
  + toString(): String
}
usantatecla.tictactoe.views.Message .down.> Console

class  usantatecla.tictactoe.views.PlayView{
  ~ PlayView(Game)
  ~ interact()
  - put()
  - move()
}
usantatecla.tictactoe.views.WithGameView <|-down- usantatecla.tictactoe.views.PlayView
usantatecla.tictactoe.views.PlayView .down.> usantatecla.tictactoe.views.TokenView
usantatecla.tictactoe.views.PlayView .down.> usantatecla.tictactoe.views.Message
usantatecla.tictactoe.views.PlayView .down.> usantatecla.tictactoe.views.CoordinateView
usantatecla.tictactoe.views.PlayView .down.> usantatecla.tictactoe.views.ErrorView
usantatecla.tictactoe.views.PlayView .down.> Game
usantatecla.tictactoe.views.PlayView .down.> Coordinate

class  usantatecla.tictactoe.views.ResumeView{
  ~ ResumeView(Game)
  ~ interact(): boolean

}
usantatecla.tictactoe.views.WithGameView <|-down- usantatecla.tictactoe.views.ResumeView
usantatecla.tictactoe.views.ResumeView .down.> usantatecla.tictactoe.views.Message
usantatecla.tictactoe.views.ResumeView .down.> Game

class usantatecla.tictactoe.views.StartView{
  ~ StartView(Game)
  ~ interact()
}
usantatecla.tictactoe.views.WithGameView <|-down- usantatecla.tictactoe.views.StartView
usantatecla.tictactoe.views.StartView .down.> usantatecla.tictactoe.views.BoardView
usantatecla.tictactoe.views.StartView .down.> usantatecla.tictactoe.views.Message
usantatecla.tictactoe.views.StartView .down.> Game
usantatecla.tictactoe.views.StartView .down.> LimitedIntDialog

abstract class usantatecla.tictactoe.views.WithGameView{
  ~ WithGameView(Game)
}

usantatecla.tictactoe.views.WithGameView *-down-> Game

class usantatecla.tictactoe.views.TokenView{
  - {static} SYMBOLS: char
  ~ TokenView(Token)
  ~ write()
}
usantatecla.tictactoe.views.TokenView *-down-> Token
usantatecla.tictactoe.views.TokenView .down.> Console

class  usantatecla.tictactoe.views.View{
  + View(Game)
  + interact()
}
usantatecla.tictactoe.views.View *-down-> usantatecla.tictactoe.views.StartView
usantatecla.tictactoe.views.View *-down-> usantatecla.tictactoe.views.PlayView
usantatecla.tictactoe.views.View *-down-> usantatecla.tictactoe.views.ResumeView
usantatecla.tictactoe.views.View *-down-> Game
@enduml

@startuml tictactoe.models
enum Error as "usantatecla.\ntictactoe.types.\nError"
enum Token as "usantatecla.\ntictactoe.types.\nToken"
class Direction as "usantatecla.utils.\nDirection"
class ConcreteCoordinate as "usantatecla.utils.\nConcreteCoordinate"
class ClosedInterval as "usantatecla.utils.\nClosedInterval"

class  usantatecla.tictactoe.models.Board{
  ~ Board()
  ~ reset()
  ~ getToken(Coordinate): Token
  ~ isCompleted(): boolean
  ~ put(Coordinate, Token)
  ~ move(Coordinate, Coordinate)
  - remove(Coordinate)
  ~ isOccupied(Coordinate, Token): boolean
  ~ isEmpty(Coordinate): boolean
  ~ isusantatecla.TicTacToe(Token): boolean
  - getCoordinates(Token): List<Coordinate>
}
usantatecla.tictactoe.models.Board *-down-> "*" Token
usantatecla.tictactoe.models.Board .down.> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Board .down.> Direction

class  usantatecla.tictactoe.models.Coordinate{
  - {static} NULL_COORDINATE: Coordinate
  + {static} DIMENSION: int
  - {static} LIMITS: ClosedInterval
  + Coordinate()
  + Coordinate(int, int)
  + isNull(): boolean
  + isValid(): Error
  + getDirection(Coordinate): Direction
  - inInverseDiagonal(): boolean
  + random()
  + equals(Object): boolean
}
ConcreteCoordinate <|-down- usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Coordinate .down.> Error
usantatecla.tictactoe.models.Coordinate .down.> Direction
usantatecla.tictactoe.models.Coordinate .down.> ClosedInterval

class  usantatecla.tictactoe.models.Game{
  + Game()
  + setUsers(int)
  + isBoardComplete(): boolean
  + isUser(): boolean
  + put(Coordinate): Error
  + move(Coordinate, Coordinate): Error
  + next()
  + isusantatecla.TicTacToe(): boolean
  + getToken(Coordinate): Token
  + getToken(): Token
  + getMaxPlayers(): int
  + reset()
}
usantatecla.tictactoe.models.Game *-down-> usantatecla.tictactoe.models.Board
usantatecla.tictactoe.models.Game *-down-> usantatecla.tictactoe.models.Turn
usantatecla.tictactoe.models.Game .down.> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Game .down.> Error

class  usantatecla.tictactoe.models.Player{
  ~ Player(Token, Board)
  ~ put(Coordinate): Error
  ~ move(Coordinate, Coordinate): Error
  ~ getToken(): Token
}
usantatecla.tictactoe.models.Player *-down-> usantatecla.tictactoe.models.Board
usantatecla.tictactoe.models.Player *-down-> Token
usantatecla.tictactoe.models.Player .down.> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Player .down.> Error

class  usantatecla.tictactoe.models.Turn{
  - {static} NUM_PLAYERS: int
  - active: int
  - users: int
  ~ Turn(Board)
  ~ setUsers(int)
  ~ next()
  ~ isUser(): boolean
  ~ put(Coordinate): Error
  - getPlayer(): Player
  ~ move(Coordinate, Coordinate): Error
  ~ getToken(): Token
}

usantatecla.tictactoe.models.Turn *-down-> "*" usantatecla.tictactoe.models.Player
usantatecla.tictactoe.models.Turn *-down-> usantatecla.tictactoe.models.Board
usantatecla.tictactoe.models.Turn .down.> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Turn .down.> Token
usantatecla.tictactoe.models.Turn .down.> Error

@enduml

@startuml tictactoe.types
class ClosedInterval as "usantatecla.utils.\nClosedInterval"

enum  usantatecla.tictactoe.types.Error{
  + NOT_EMPTY
  + NOT_OWNER
  + SAME_COORDINATES
  + WRONG_COORDINATES
  + NULL_ERROR
  + isNull(): boolean
}

enum  usantatecla.tictactoe.types.Token{
  + X
  + O
  + NULL
  + isNull(): boolean
  + {static} get(int): Token
  + toString(): String
}
usantatecla.tictactoe.types.Token .down.> ClosedInterval

@enduml

@startuml tictactoe.utils
class BufferedReader as "java.io.BufferedReader"{}

class  usantatecla.utils.models.ClosedInterval{
  - min: int
  - max: int
  + ClosedInterval(int,int)
  + isIncluded(int): boolean
  + toString(): String
}

class usantatecla.utils.models.ConcreteCoordinate{
  # row: int
  # column: int
  - {static} ROW: String
  - {static} COLUMN: String
  # ConcreteCoordinate()
  # ConcreteCoordinate(int,int)
  + isNull(): boolean
  + getDirection(Coordinate): Direction
  + inHorizontal(Coordinate): boolean
  + inVertical(Coordinate): boolean
  + inMainDiagonal(): boolean
  # read(String)
  + getRow(): int
  + getColumn(): int
  + hashCode(): int
  + equals(Object): boolean
  + toString(): String
}

usantatecla.utils.models.Coordinate <|..down- usantatecla.utils.models.ConcreteCoordinate
usantatecla.utils.models.ConcreteCoordinate ..> usantatecla.utils.models.Direction
usantatecla.utils.models.ConcreteCoordinate ..> usantatecla.utils.views.Console


class usantatecla.utils.views.Console{
  - {static} console: Console
  + {static} instance(): Console
  - readString(String): String
  + readString(): String
  + readInt(String): int
  ~ readChar(String): char
  + writeln()
  + write(String)
  + write(int)
  + writeln(String)
  + writeln(int)
  + write(char)
  - writeError(String)
}
usantatecla.utils.views.Console *-down-> BufferedReader

interface usantatecla.utils.models.Coordinate{
  ~ isNull(): boolean
  ~ getDirection(Coordinate): Direction
  ~ inHorizontal(Coordinate): boolean
  ~ inVertical(Coordinate): boolean
  ~ inMainDiagonal(): boolean
}
usantatecla.utils.models.Coordinate ..> usantatecla.utils.models.Direction

enum usantatecla.utils.models.Direction{
  VERTICAL
  HORIZONTAL
  MAIN_DIAGONAL
  INVERSE_DIAGONAL
  NULL
}

class usantatecla.utils.LimitedIntDialog{
  - LIMITS: ClosedInterval
  - {static} ERROR_MESSAGE: String
  + LimitedIntDialog(int,int)
  + read(String): int
}

usantatecla.utils.LimitedIntDialog *-down-> usantatecla.utils.models.ClosedInterval
usantatecla.utils.LimitedIntDialog ..> usantatecla.utils.views.Console

class usantatecla.utils.models.NullCoordinate{
  - {static} instance: NullCoordinate
  + {static} instance(): Coordinate
  + isNull(): boolean
  + getDirection(Coordinate): Direction
  + inHorizontal(Coordinate): boolean
  + inVertical(Coordinate): boolean
  + inMainDiagonal(): boolean
  + hashCode(): int
  + equals(Object): boolean
  + toString(): String
}
usantatecla.utils.models.Coordinate <|..down- usantatecla.utils.models.NullCoordinate
usantatecla.utils.models.NullCoordinate ..> usantatecla.utils.models.Direction

class usantatecla.utils.views.YesNoDialog{
  - {static} AFIRMATIVE: char
  - {static} NEGATIVE: char
  - {static} SUFFIX: String
  - {static} MESSAGE: String
  - answer: char
  + read(String): boolean
  - isAffirmative(): boolean
  - getAnswer(): char
  - isNegative(): boolean
}
usantatecla.utils.views.YesNoDialog ..> usantatecla.utils.views.Console

@enduml
